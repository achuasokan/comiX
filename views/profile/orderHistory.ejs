<%- include('../partials/header.ejs') %>

<style>
  .item-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 15px; /* Add padding for better spacing */
  }
  .item-name {
    flex-grow: 1; /* Allow the item name to take available space */
    min-width: 0; /* Prevent overflow */
    margin-right: 10px; /* Space between name and price */
  }
  .item-price {
    min-width: 100px; /* Fixed width for price */
    text-align: right; /* Align text to the right */
    margin-right: 200px; /* Space between name and price */
  }
  .item-status {
    min-width: 200px; /* Fixed width for status */
    text-align: right; /* Align text to the right */
  }
</style>

<div class="flex bg-black text-white">
  <%- include('./profileSidebar.ejs') %>

  <div class="container mx-auto p-6 flex-1">
    <h1 class="text-3xl font-bold mb-4">Your Order History</h1>

    <div class="flex flex-col md:flex-row mb-4">
      <select
        class="mb-2 md:mb-0 md:mr-4 p-2 rounded bg-gray-800 text-white border border-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500"
      >
        <option value="">Filter by Status</option>
        <option value="Delivered">Delivered</option>
        <option value="Cancelled">Cancelled</option>
        <option value="Processing">Processing</option>
      </select>
      <input
        type="text"
        placeholder="Search your orders here"
        class="w-full p-2 rounded bg-gray-800 text-white border border-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500"
      />
    </div>

    <% if (orders.length === 0) { %>
    <p class="text-gray-400">You have no orders yet.</p>
    <% } else { %>
    <ul class="space-y-4">
      <% orders.forEach(order => { %>
      <li class="border border-gray-700 rounded-lg p-4 shadow-md">
        <h2 class="text-xl font-semibold flex justify-between items-center">
          <span>Order ID: <%= order._id %></span>
          <% if (order.paymentStatus === 'Pending' && order.paymentMethod === 'Razorpay') { %>
            <button class="bg-gradient-to-r from-red-600 to-yellow-400 text-black px-2 py-1 text-sm rounded-lg hover:bg-blue-600" onclick="repayOrder(`<%= order._id %>`)">
              Repay
            </button>
          <% } %>
        </h2>
        <p class="text-sm text-gray-400">Payment Status: <%= order.paymentStatus %></p>
        <div class="space-y-2">
          <% order.items.forEach(item => { %>
          <div class="border border-gray-600 rounded-lg item-container">
            <div class="flex items-center item-name">
              <a href="/order/<%= order._id %>/details/<%= item._id %>" class="flex items-center">
                <% if (item.product) { %>
                <img
                  src="<%= item.product.image[1] %>"
                  alt="<%= item.product.name %>"
                  class="w-16 h-16 object-cover rounded mr-4"
                />
                <div class="flex flex-col">
                  <h3 class="text-lg font-semibold truncate"><%= item.product.name %></h3>
                  <p class="text-sm text-gray-400">Category: <%= item.product.category.name %></p>
                </div>
                <% } else { %>
                <p class="text-sm text-gray-400">Product not found</p>
                <% } %>
              </a>
            </div>
            <div class="item-price">
              <p class="text-lg">Price: â‚¹<%= item.discountPrice %></p>
            </div>
            <div class="item-status">
              <p class="text-sm text-gray-400">
                <% if (item.itemStatus === 'Pending') { %>
                <span class="text-yellow-500">Order is pending right now.</span>
                <% } else if (item.itemStatus === 'Shipped') { %>
                <span class="text-green-500">Shipped on <%= order.updatedAt.toLocaleDateString() %></span>
                <% } else if (item.itemStatus === 'Confirmed') { %>
                <span class="text-green-500">Confirmed on <%= order.updatedAt.toLocaleDateString() %></span>
                <% } else if (item.itemStatus === 'Delivered') { %>
                <span class="text-green-500">Delivered on <%= order.updatedAt.toLocaleDateString() %></span>
                <% } else if (item.itemStatus === 'Cancelled') { %>
                <span class="text-red-500">Cancelled on <%= order.updatedAt.toLocaleDateString() %></span>
                <% } else if (item.itemStatus === 'Returned') { %>
                <span class="text-red-500">Returned on <%= order.updatedAt.toLocaleDateString() %></span>
                <% } else if (item.itemStatus === 'Refunded') { %>
                <span class="text-orange-500">Your item has been refunded on <%= order.updatedAt.toLocaleDateString() %></span>
                <% } else if (item.itemStatus === 'Return Requested') { %>
                <span class="text-yellow-500">Return request sent</span>
                <% } else if (item.itemStatus === 'Rejected') { %>
                <span class="text-red-500">Return request rejected.</span>
                <% } %>
              </p>
            </div>
          </div>
          <% }) %>
        </div>
      </li>
      <% }) %>
    </ul>
    <% } %>
  </div>
</div>

<%- include('../partials/footer.ejs') %>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
   const razorpayKey = "<%= razorpayKey %>";
  async function repayOrder(orderId) {
try{
const response = await axios.post(`/checkout/payment/repay/${orderId}`);
const data = response.data;

if(data.success) {
  const options = {
    key: razorpayKey,
    amount: data.amount,
    currency: "INR",
    name: "comiX",
    image: "img/comiX.png",
    order_id: data.razorpayOrderId,
    handler: async function(response) {
      console.log("response", response);
      await axios.post('/checkout/payment/verify', {
        razorpayOrderId: data.razorpayOrderId,
        paymentId: response.razorpay_payment_id,
        signature: response.razorpay_signature,
        OrderId: data.OrderId,
        address: '',
        paymentMethod: 'Razorpay'
      });
        window.location.href = '/checkout/order-confirmation';
    },
    theme: {
      color: "#000000"
    }
  }
  const razorpay = new Razorpay(options);
  razorpay.open();
} else {
  alert(data.message || 'Failed to initiate payment');
}
}catch(error) {
  console.log("error in repay order", error);  
}
  }
</script>
